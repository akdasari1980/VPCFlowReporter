require 'csv'
require_relative 'vpcfrFormatter'

module VPCFR

  # A concrete class fulfilling the VPCFormatter template that
  # will produce a report in a delimited based format. It defaults
  # to a standard Comma Separated Value (CSV) output, but the separator
  # can be modified.
  #
  # @author Andy Akins
  # @since 1.0.0
  # @attr [String] delimiter Value of the delimited used in output, defaults to comma(,).
  class VPCFRDelimitedFormatter
    include VPCFRFormatter

    attr_accessor :delimiter

    # Class constructor, simply initializes the instance variables.
    #
    # @param [Array[String]] columnNames List of all of the column names from the source input.
    def initialize(columnNames)
      @columnNames = columnNames
      @delimiter = ','
    end

    # Take data created by a VPCFRParser and formats it into a string of
    # delimited rows of results. The separator is defined by the delimiter
    # instance variable.
    #
    # @param [Hash,Array] data Data generated by VPCFRParser be be formatted into a report.
    # @return [String] String generated from provided data that has been formatted into a character delimited report.
    def format(data)
      csvData = CSV.generate(:col_sep => @delimiter) do |csv|

        if data.instance_of? Hash
          data.each_key do |key|
            csv << [key,data[key]]
          end
        else
          data.each do |row|
            newrow = []
            @columnNames.each do |name|
              newrow.push(row[name])
            end
            csv << newrow
          end
        end
      end

      csvData
    end
  end
end
